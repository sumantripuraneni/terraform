# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: 'none'

variables:
  vmImageName: ubuntu-latest
  #azureSubscription: '03256176-3593-4a3c-b220-9c7b4415e41a'
  workingDirectory: $(System.DefaultWorkingDirectory)/terraform
  storageSubscription: '03256176-3593-4a3c-b220-9c7b4415e41a'
  storageRGName: az-pipeline-demo
  storageAcctName: cmpaterraform
  storageCtrName: tfstate
  # storageKeyName: psql/terraform.tfstate
  tf_environment: dev

stages:

  - stage: tfStaticCodeAnalysis
    displayName: TFSEC
    jobs:
      - job: tfsec
        displayName: Run TFSEC
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: tfsec@1
            inputs:
              version: 'v1.26.0'
              dir: '$(workingDirectory)'

  - stage: tfInstall
    displayName: Terraform install
    dependsOn: tfStaticCodeAnalysis
    jobs:
      - job: terraformInstall
        displayName: Install Terraform 
        pool:
          vmImage: $(vmImageName) 
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'

  - stage: processTerrform
    displayName: Process Terraform Scripts
    dependsOn: tfInstall
    jobs:
      - job: terraformActivities
        pool:
          vmImage: $(vmImageName) 
        steps:
          - task: Bash@3
            displayName: Print working directory contents
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                
                ls -lart $(System.DefaultWorkingDirectory)
          
          - bash: terraform -version
            displayName: 'check terraform version'

          - task: TerraformTaskV3@3
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(workingDirectory)'
              backendServiceArm: 'Azure subscription 1 (c8733424-2052-41bf-a4fc-a89f9ce93ea7)'
              backendAzureRmResourceGroupName: '$(storageRGName)'
              backendAzureRmStorageAccountName: '$(storageAcctName)'
              backendAzureRmContainerName: '$(storageCtrName)'
              backendAzureRmKey: '$(tf_environment).terraform.tstate'
              

          - task: TerraformTaskV3@3
            displayName: Plan 
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(workingDirectory)'
              commandOptions: '-out=tfplan'
              environmentServiceNameAzureRM: 'Azure subscription 1 (c8733424-2052-41bf-a4fc-a89f9ce93ea7)'
              
          - task: TerraformTaskV3@3
            displayName: Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(workingDirectory)'
              commandOptions: '-state=tfplan'
              environmentServiceNameAzureRM: 'Azure subscription 1 (c8733424-2052-41bf-a4fc-a89f9ce93ea7)'
